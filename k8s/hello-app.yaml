apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-app
  namespace: default
  labels:
    app: hello-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: hello-app
  template:
    metadata:
      labels:
        app: hello-app
    spec:
      containers:
        - name: hello-app
          image: sirajudheenam/hello-go-app:v1.0.25
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          resources:
            requests:
              cpu: "50m"
              memory: "64Mi"
            limits:
              cpu: "200m"
              memory: "128Mi"
          volumeMounts:
            - name: logs
              mountPath: /app/logs
      volumes:
        - name: logs
          emptyDir: {}   # ephemeral storage for logs
---
# apiVersion: v1
# kind: Service
# metadata:
#   name: hello-app-service
#   namespace: default
# spec:
#   type: ClusterIP
#   selector:
#     app: hello-app
#   ports:
#     - port: 80
#       targetPort: 8080

apiVersion: v1
kind: Service
metadata:
  name: hello-app-service
  namespace: default
spec:
  type: NodePort
  selector:
    app: hello-app
  ports:
    - port: 80         # Service port, Other pods can reach your service at hello-app-service:80
      targetPort: 8080 # Port on the pod container; The container port in the pod where your app is actually listening.
      nodePort: 30080  # Port on the Minikube/host node; The port exposed on the Minikube node (host machine). Allows you to access the service from outside the cluster at <minikube-ip>:30080


---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hello-app-ingress
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
    - host: hello-app.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: hello-app-service
                port:
                  number: 80